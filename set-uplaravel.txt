1. sql export
2. php artisan config:cache
3. php artisan cache:clear
4. php artisan view:clear

5. create subdomain
6. upload to domain folder
7. edit the env
8. update php version 
8. boostrap folder- cache- delete config.php
9. root- create .htaccess

<IfModule mod_rewrite.c>
   RewriteEngine on     
   RewriteCond %{REQUEST_URI} !^public
   RewriteRule ^(.*)$ public/$1 [L]
</IfModule>

10. zone editor

elink.rmdivi.com ttl=600 class=IN type=A record=server ip address


//user login route to dashboard add this method

logincontroller

    protected function authenticated(Request $request, $user)
    {

            return redirect()->route('websitedashboard');
    }
    
 
 // inside ajax redirection
          setInterval(function() {
          window.location = '{{route('websiteuser')}}';
          }, 2000);
                                
 //reload
 
       window.location.reload();
       
 //root redirect to public or rm in laravel host
 1. create index.php inside the root folder
       
 <?php
header('Location: rm/');


///user log-out
public function userLogout(){

        return redirect('login')->with(Auth::logout());
    }
    
    //search filter in livewire
    query:

public $paginate =10;
public $checked =[];
public $search="";
public $selectedClass = null;

method render:

return view('livewire.students',['students'=>

	Student::with(['class','section'])
	->when($this->selectedClass,function($query)){
		$query->where('class_id',$this->selectedClass);
	}->search(trim($this->search))
	->paginate($this->paginate),
	'classes'=>Classes::all(),
]);


						
//model 

public function scopeSearch($query,$term){
$term = "%$term%";
$query->where(function($query) use ($term){
	$query->where('name', 'like', $term)
	->orWhere('email','like',$term)
	->orWhereHas('class', function($query) use($term){
		$query->where('name','like',$term);
	})
});
}


//Emit Events in livewire
// must be in livewire template
<div @click="isMenu = 'listevent'"  wire:click="$emit('listevent')" :class="{'py-2 rounded-lg bg-red-900 font-bold text-gray-100 ':isMenu==='listevent'}"></div>
//listened the event in any component
protected $listeners = ['listevent' => 'showListEvent'];

public function showListEvent(){
        $this->render();
    }
    
 public function render()
    {
        return view('livewire.listevents',[
            'events' => Event::listEvent()
        ]);
    }
}


//sweetalert2 livewire
go to this link for the instructions:
https://github.com/jantinnerezo/livewire-alert


//download pdf in laravel

public function download(){

        $event = Event::getEventSpecific($this->eventid);

        $trimBrochureAddress = explode('/',$event->eventbrochure);

        $path = public_path('storage/event_brochure/'.$trimBrochureAddress[1]);

        return response()->download($path);


    }

//paginate shorten
User::paginate(10)->onEachSide(2);


//online catalog
WHM ACCESS
https://66.45.248.2:2087/ 
Username: devsite
Password: Dp=Tufvd!MF6/*!J

onlinecatalog.readersmagnet.com
